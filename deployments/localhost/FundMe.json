{
  "address": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc3b453dcf84430b45a2316ac28e85ebaed53200126582b4258cb3ba286909d3e",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
    "transactionIndex": 0,
    "gasUsed": "1011591",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x3db008241d164739b4cb9c8b68860f647d1e9cf101866f6f13f3f6a685eec786",
    "transactionHash": "0xc3b453dcf84430b45a2316ac28e85ebaed53200126582b4258cb3ba286909d3e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1011591",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8464135c8F25Da09e49BC8782676a84730C318bC"
  ],
  "numDeployments": 1,
  "solcInputHash": "2a049b8912edb75b34bf46d0f0d74b24",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8; //0.8.8\\n\\nimport \\\"./PriceConverter.sol\\\";\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //msg.value.getConversionRate() is getConversionRate(msg.value)\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Don't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withDraw() public payable onlyOwner {\\n        for (uint256 fundIndex = 0; fundIndex < s_funders.length; fundIndex++) {\\n            address funder = s_funders[fundIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        s_funders = new address[](0);\\n\\n        /*\\n        //return money\\n        //transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed\\\");\\n        */\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    //\\u65e0\\u53c2\\u6570\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    //\\u6709\\u53c2\\u6570\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xb38d6430c745144776d0f2ad9ee4fbd00b055f5105360b68b3a212ccb8167369\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8; //0.8.8\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); //return 1296100000000000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x3e384c4747b897f2d522fc027a6ca1ad27e90cfdd37f07e299b41674abd3ce74\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200127538038062001275833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110ef620001866000396000818161032501528181610574015281816105c401526107ba01526110ef6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780630fdb1c10146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a7d565b6102da565b6040516100cc9190610ac3565b60405180910390f35b6100dd610323565b005b3480156100eb57600080fd5b506100f4610563565b6040516101019190610ac3565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610aed565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b67565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bae565b610850565b6040516101a89190610aed565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c38565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104535760008082815481106103cd576103cc610c58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044b90610cb6565b9150506103ab565b50600067ffffffffffffffff81111561046f5761046e610cff565b5b60405190808252806020026020018201604052801561049d5781602001602082028036833780820191505090505b50600090805190602001906104b3929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104da90610d5f565b60006040518083038185875af1925050503d8060008114610517576040519150601f19603f3d011682016040523d82523d6000602084013e61051c565b606091505b5050905080610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610dc0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c58565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610cb6565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610cff565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610973565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610d5f565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610c58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610de0565b6108c69190610e69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610f27565b5050509150506402540be4008161096b9190610fa2565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4a82610a1f565b9050919050565b610a5a81610a3f565b8114610a6557600080fd5b50565b600081359050610a7781610a51565b92915050565b600060208284031215610a9357610a92610a1a565b5b6000610aa184828501610a68565b91505092915050565b6000819050919050565b610abd81610aaa565b82525050565b6000602082019050610ad86000830184610ab4565b92915050565b610ae781610a3f565b82525050565b6000602082019050610b026000830184610ade565b92915050565b6000819050919050565b6000610b2d610b28610b2384610a1f565b610b08565b610a1f565b9050919050565b6000610b3f82610b12565b9050919050565b6000610b5182610b34565b9050919050565b610b6181610b46565b82525050565b6000602082019050610b7c6000830184610b58565b92915050565b610b8b81610aaa565b8114610b9657600080fd5b50565b600081359050610ba881610b82565b92915050565b600060208284031215610bc457610bc3610a1a565b5b6000610bd284828501610b99565b91505092915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768210000000000000000000000000000600082015250565b6000610c22601283610bdb565b9150610c2d82610bec565b602082019050919050565b60006020820190508181036000830152610c5181610c15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610aaa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf457610cf3610c87565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d49600083610d2e565b9150610d5482610d39565b600082019050919050565b6000610d6a82610d3c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610daa600b83610bdb565b9150610db582610d74565b602082019050919050565b60006020820190508181036000830152610dd981610d9d565b9050919050565b6000610deb82610aaa565b9150610df683610aaa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2f57610e2e610c87565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7482610aaa565b9150610e7f83610aaa565b925082610e8f57610e8e610e3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eb981610e9a565b8114610ec457600080fd5b50565b600081519050610ed681610eb0565b92915050565b6000819050919050565b610eef81610edc565b8114610efa57600080fd5b50565b600081519050610f0c81610ee6565b92915050565b600081519050610f2181610b82565b92915050565b600080600080600060a08688031215610f4357610f42610a1a565b5b6000610f5188828901610ec7565b9550506020610f6288828901610efd565b9450506040610f7388828901610f12565b9350506060610f8488828901610f12565b9250506080610f9588828901610ec7565b9150509295509295909350565b6000610fad82610edc565b9150610fb883610edc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff757610ff6610c87565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103457611033610c87565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107157611070610c87565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ae576110ad610c87565b5b82820290509291505056fea26469706673582212204f7003c2025acd2656efd94371c0a867e918a4e40d35ec7b97d49ff4a159ff1364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780630fdb1c10146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a7d565b6102da565b6040516100cc9190610ac3565b60405180910390f35b6100dd610323565b005b3480156100eb57600080fd5b506100f4610563565b6040516101019190610ac3565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610aed565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b67565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bae565b610850565b6040516101a89190610aed565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c38565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104535760008082815481106103cd576103cc610c58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044b90610cb6565b9150506103ab565b50600067ffffffffffffffff81111561046f5761046e610cff565b5b60405190808252806020026020018201604052801561049d5781602001602082028036833780820191505090505b50600090805190602001906104b3929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104da90610d5f565b60006040518083038185875af1925050503d8060008114610517576040519150601f19603f3d011682016040523d82523d6000602084013e61051c565b606091505b5050905080610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610dc0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c58565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610cb6565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610cff565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610973565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610d5f565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610c58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610de0565b6108c69190610e69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610f27565b5050509150506402540be4008161096b9190610fa2565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4a82610a1f565b9050919050565b610a5a81610a3f565b8114610a6557600080fd5b50565b600081359050610a7781610a51565b92915050565b600060208284031215610a9357610a92610a1a565b5b6000610aa184828501610a68565b91505092915050565b6000819050919050565b610abd81610aaa565b82525050565b6000602082019050610ad86000830184610ab4565b92915050565b610ae781610a3f565b82525050565b6000602082019050610b026000830184610ade565b92915050565b6000819050919050565b6000610b2d610b28610b2384610a1f565b610b08565b610a1f565b9050919050565b6000610b3f82610b12565b9050919050565b6000610b5182610b34565b9050919050565b610b6181610b46565b82525050565b6000602082019050610b7c6000830184610b58565b92915050565b610b8b81610aaa565b8114610b9657600080fd5b50565b600081359050610ba881610b82565b92915050565b600060208284031215610bc457610bc3610a1a565b5b6000610bd284828501610b99565b91505092915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768210000000000000000000000000000600082015250565b6000610c22601283610bdb565b9150610c2d82610bec565b602082019050919050565b60006020820190508181036000830152610c5181610c15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610aaa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf457610cf3610c87565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d49600083610d2e565b9150610d5482610d39565b600082019050919050565b6000610d6a82610d3c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610daa600b83610bdb565b9150610db582610d74565b602082019050919050565b60006020820190508181036000830152610dd981610d9d565b9050919050565b6000610deb82610aaa565b9150610df683610aaa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2f57610e2e610c87565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7482610aaa565b9150610e7f83610aaa565b925082610e8f57610e8e610e3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eb981610e9a565b8114610ec457600080fd5b50565b600081519050610ed681610eb0565b92915050565b6000819050919050565b610eef81610edc565b8114610efa57600080fd5b50565b600081519050610f0c81610ee6565b92915050565b600081519050610f2181610b82565b92915050565b600080600080600060a08688031215610f4357610f42610a1a565b5b6000610f5188828901610ec7565b9550506020610f6288828901610efd565b9450506040610f7388828901610f12565b9350506060610f8488828901610f12565b9250506080610f9588828901610ec7565b9150509295509295909350565b6000610fad82610edc565b9150610fb883610edc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff757610ff6610c87565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103457611033610c87565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107157611070610c87565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ae576110ad610c87565b5b82820290509291505056fea26469706673582212204f7003c2025acd2656efd94371c0a867e918a4e40d35ec7b97d49ff4a159ff1364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}